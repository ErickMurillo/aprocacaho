# -*- coding: utf-8 -*-
# Generated by Django 1.9.4 on 2016-03-18 21:10
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import smart_selects.db_fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('lugar', '0003_auto_20150804_1931'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('organizacion', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AreaFinca',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('area', models.FloatField(verbose_name='3.1 \xc1rea total en manzanas que tiene la propiedad')),
            ],
            options={
                'verbose_name': '3 Uso de la Tierra',
                'verbose_name_plural': '3 Uso de la Tierra',
            },
        ),
        migrations.CreateModel(
            name='Beneficios',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('beneficio', models.CharField(max_length=200)),
            ],
            options={
                'verbose_name': 'Beneficio de estar asociado',
                'verbose_name_plural': 'Beneficios de estar asociado',
            },
        ),
        migrations.CreateModel(
            name='BeneficiosOrganizado',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('beneficios', models.ManyToManyField(to='productores.Beneficios', verbose_name='Beneficios de estar asociado')),
            ],
            options={
                'verbose_name': '8 Org. productiva-comercial asociado',
                'verbose_name_plural': '8 Org. productiva-comercial asociado',
            },
        ),
        migrations.CreateModel(
            name='CaracterizacionTerreno',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('textura_suelo', models.IntegerField(choices=[(1, 'Arcilloso'), (2, 'Limoso'), (3, 'Arenoso'), (4, 'Franco')], verbose_name='\xbfCu\xe1l es el tipo de textura del suelo?')),
                ('pendiente_terreno', models.IntegerField(choices=[(1, 'Plana (0-10%)'), (2, 'Inclinada (11-30%)'), (3, 'Muy inclinada (> 30%)')], verbose_name='\xbfCu\xe1l es la pendiente del terreno?')),
                ('contenido_hojarasca', models.IntegerField(choices=[(1, 'Alta'), (2, 'Medio'), (3, 'Baja')], verbose_name='\xbfC\xf3mo en el contenido de hojarasca?')),
                ('porfundidad_suelo', models.IntegerField(choices=[(1, 'Poco profundo (< 50 cm)'), (2, 'Medio profundo (51-80 cm)'), (3, 'Muy profundo (> 80 cm)')], verbose_name='\xbfCu\xe1l es la profundidad de suelo?')),
                ('drenaje_suelo', models.IntegerField(choices=[(1, 'Bueno (no se encharca)'), (2, 'Regular (poco se encharca)'), (3, 'Malo (se encharca con lluvia)')], verbose_name='\xbfC\xf3mo en el drenaje del suelo?')),
            ],
            options={
                'verbose_name': '5 Caracterizaci\xf3n de terreno',
                'verbose_name_plural': '5 Caracterizaci\xf3n de terreno',
            },
        ),
        migrations.CreateModel(
            name='DetalleAreaFinca',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seleccion', models.IntegerField(choices=[(1, 'Bosque'), (2, 'Tacotal o regeneraci\xf3n natural'), (3, 'Cultivo anual ( que produce en el a\xf1o)'), (4, 'Plantaci\xf3n forestal ( madera y le\xf1a)'), (5, '\xc1rea de pastos abierto'), (6, '\xc1rea de pastos con \xe1rboles'), (7, 'Cultivo perenne (frutales)'), (8, 'Cultivo semi-perenne (mus\xe1cea, pi\xf1a)'), (9, 'Solo destinado para cacao'), (10, 'Huerto mixto con cacao'), (11, 'Otros')], verbose_name='3.2 Distribuci\xf3n de la finca')),
                ('area', models.FloatField(verbose_name='\xc1rea en Mz')),
            ],
            options={
                'verbose_name': '3 Uso de la Tierra',
                'verbose_name_plural': '3 Uso de la Tierra',
            },
        ),
        migrations.CreateModel(
            name='Educacion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rango', models.IntegerField(choices=[(1, 'Hombres mayores 31 a\xf1os'), (2, 'Mujeres mayores 31 a\xf1os'), (3, 'Hombre joven 19 a 30 a\xf1os'), (4, 'Mujer joven 19 a 30 a\xf1os'), (5, 'Hombre adoles. 13 a 18 a\xf1os'), (6, 'Mujer adoles. 13 a 18 a\xf1os'), (7, 'Ni\xf1os 5 a 12 a\xf1os'), (8, 'Ni\xf1as 5 a 12 a\xf1os'), (9, 'Ancianos (> 64 a\xf1os)'), (10, 'Ancianas (> 64 a\xf1os)')], verbose_name='Selecci\xf3n')),
                ('numero_total', models.IntegerField(verbose_name='N\xfamero total')),
                ('no_lee_ni_escribe', models.IntegerField(verbose_name='No lee, ni escribe')),
                ('primaria_incompleta', models.IntegerField(verbose_name='Primaria incompleta')),
                ('primaria_completa', models.IntegerField(verbose_name='Primaria completa')),
                ('secundaria_incompleta', models.IntegerField(verbose_name='Secundaria incompleta')),
                ('bachiller', models.IntegerField(verbose_name='Bachiller')),
                ('universitario_tecnico', models.IntegerField(verbose_name='Universitario o t\xe9cnico')),
                ('viven_fuera', models.IntegerField(verbose_name='N\xfamero de personas que viven fuera de la finca')),
            ],
            options={
                'verbose_name': '1-2 Nivel de escolaridad de los miembros de la familia',
                'verbose_name_plural': '1-2 Nivel de escolaridad de los miembros de la familia',
            },
        ),
        migrations.CreateModel(
            name='Encuesta',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateField(verbose_name='Fecha de la encuesta')),
                ('year', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Encuestadores',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=200)),
                ('organizacion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='organizacion.Organizacion')),
            ],
            options={
                'verbose_name': 'Encuestador',
                'verbose_name_plural': 'Encuestadores',
            },
        ),
        migrations.CreateModel(
            name='Entrevistados',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=200, verbose_name='Nombre del jefe de familia')),
                ('cedula', models.CharField(max_length=20, verbose_name='N\xfamero de Cedula')),
                ('fecha_nacimiento', models.DateField(verbose_name='Fecha de nacimiento')),
                ('latitud', models.FloatField(blank=True, null=True)),
                ('longitud', models.FloatField(blank=True, null=True)),
                ('comunidad', smart_selects.db_fields.ChainedForeignKey(auto_choose=True, chained_field='municipio', chained_model_field='municipio', on_delete=django.db.models.deletion.CASCADE, to='lugar.Comunidad')),
                ('departamento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lugar.Departamento')),
                ('municipio', smart_selects.db_fields.ChainedForeignKey(auto_choose=True, chained_field='departamento', chained_model_field='departamento', on_delete=django.db.models.deletion.CASCADE, to='lugar.Municipio')),
                ('organizacion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='organizacion.Organizacion', verbose_name='A que Organizaci\xf3n pertenece')),
            ],
            options={
                'verbose_name': 'Informaci\xf3n del Entrevistado',
                'verbose_name_plural': 'Informaci\xf3n del Entrevistado',
            },
        ),
        migrations.CreateModel(
            name='Familia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('miembros', models.IntegerField(verbose_name='N\xfamero de miembros')),
                ('encuesta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productores.Encuesta')),
            ],
            options={
                'verbose_name': '1-1 Miembros de la Familia',
                'verbose_name_plural': '1-1 Miembros de la Familia',
            },
        ),
        migrations.CreateModel(
            name='FenomenosNaturales',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sequia', models.IntegerField(choices=[(1, 'Fuerte'), (2, 'Poco fuerte'), (3, 'Leve'), (4, 'No hubo')], verbose_name='Sequ\xeda')),
                ('innundacion', models.IntegerField(choices=[(1, 'Fuerte'), (2, 'Poco fuerte'), (3, 'Leve'), (4, 'No hubo')], verbose_name='Inundaci\xf3n')),
                ('lluvia', models.IntegerField(choices=[(1, 'Fuerte'), (2, 'Poco fuerte'), (3, 'Leve'), (4, 'No hubo')])),
                ('viento', models.IntegerField(choices=[(1, 'Fuerte'), (2, 'Poco fuerte'), (3, 'Leve'), (4, 'No hubo')])),
                ('deslizamiento', models.IntegerField(choices=[(1, 'Fuerte'), (2, 'Poco fuerte'), (3, 'Leve'), (4, 'No hubo')])),
                ('encuesta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productores.Encuesta')),
            ],
            options={
                'verbose_name': '6 Fen\xf3menos naturales',
                'verbose_name_plural': '6 Fen\xf3menos naturales',
            },
        ),
        migrations.CreateModel(
            name='Inversion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invierte_cacao', models.IntegerField(choices=[(1, 'Si'), (2, 'No')], verbose_name='Invierte en cacao')),
                ('interes_invertrir', models.IntegerField(choices=[(1, 'Si'), (2, 'No')], verbose_name='Inter\xe9s de invertir')),
                ('falta_credito', models.IntegerField(choices=[(1, 'Si'), (2, 'No')], verbose_name='Falta de cr\xe9dito')),
                ('altos_intereses', models.IntegerField(choices=[(1, 'Si'), (2, 'No')])),
                ('robo_producto', models.IntegerField(choices=[(1, 'Si'), (2, 'No')], verbose_name='Robo de producto')),
                ('encuesta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productores.Encuesta')),
            ],
            options={
                'verbose_name': '6 Inversi\xf3n',
                'verbose_name_plural': '6 Inversi\xf3n',
            },
        ),
        migrations.CreateModel(
            name='MitigacionRiesgos',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('monitoreo_plagas', models.IntegerField(choices=[(1, 'Si'), (2, 'No')], verbose_name='\xbfRealiza monitoreo de plagas y enfermedades?')),
                ('manejo_cultivo', models.IntegerField(choices=[(1, 'Si'), (2, 'No')], verbose_name='\xbfCuenta con un manejo adecuado para el cultivo?')),
                ('manejo_recursos', models.IntegerField(choices=[(1, 'Si'), (2, 'No')], verbose_name='\xbfDisponen suficiente recursos para manejo de finca?')),
                ('almacenamiento_agua', models.IntegerField(choices=[(1, 'Si'), (2, 'No')], verbose_name='\xbfCuenta con obras para almacenamiento de agua?')),
                ('distribucion_cacao', models.IntegerField(choices=[(1, 'Si'), (2, 'No')], verbose_name='\xbfParticipan en cadena de distribuci\xf3n de producto cacao?')),
                ('venta_cacao', models.IntegerField(choices=[(1, 'Si'), (2, 'No')], verbose_name='\xbfCuenta con un contrato para la venta de cacao?')),
                ('si_venta_cacao', models.IntegerField(choices=[(1, 'Individual'), (2, 'A trav\xe9s de la Cooperativa')], verbose_name='Si responde Si: favor indicar si el contrato lo hace')),
                ('tecnologia_secado', models.IntegerField(choices=[(1, 'Si'), (2, 'No')], verbose_name='\xbfDispone de tecnolog\xeda para el secado y almacenamiento de cosecha?')),
                ('si_tecnologia_secado', models.IntegerField(choices=[(1, 'Propia'), (2, 'Cooperativa')], verbose_name='Si responde Si: favor indicar si la tecnolog\xeda de secado y almacenamiento es')),
                ('encuesta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productores.Encuesta')),
            ],
            options={
                'verbose_name': '7 Mitigaci\xf3n de los riesgos',
                'verbose_name_plural': '7 Mitigaci\xf3n de los riesgos',
            },
        ),
        migrations.CreateModel(
            name='Organizacion_Asociada',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('socio', models.IntegerField(choices=[(1, 'Si'), (2, 'No')], verbose_name='Trabaja con alguna Organizaci\xf3n/Instituci\xf3n')),
                ('encuesta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productores.Encuesta')),
                ('organizacion', models.ManyToManyField(blank=True, to='organizacion.Organizacion', verbose_name='Organizaci\xf3n/Instituci\xf3n con la que trabaja')),
            ],
            options={
                'verbose_name': '8 Org. productiva-comercial asociado',
                'verbose_name_plural': '8 Org. productiva-comercial asociado',
            },
        ),
        migrations.CreateModel(
            name='Profesiones',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=200)),
            ],
            options={
                'verbose_name': 'Profesi\xf3n',
                'verbose_name_plural': 'Profesiones',
            },
        ),
        migrations.CreateModel(
            name='RazonesAgricolas',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plantas_improductivas', models.IntegerField(choices=[(1, 'Alto (40%)'), (2, 'Medio (30%)'), (3, 'Baja (10%)')])),
                ('plagas_enfermedades', models.IntegerField(choices=[(1, 'Si'), (2, 'No')], verbose_name='Plagas y enfermedades')),
                ('quemas', models.IntegerField(choices=[(1, 'Si'), (2, 'No')])),
                ('encuesta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productores.Encuesta')),
            ],
            options={
                'verbose_name': '6 Razones agr\xedcolas',
                'verbose_name_plural': '6 Razones agr\xedcolas',
            },
        ),
        migrations.CreateModel(
            name='RazonesMercado',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bajo_precio', models.IntegerField(choices=[(1, 'Si'), (2, 'No')])),
                ('falta_venta', models.IntegerField(choices=[(1, 'Si'), (2, 'No')], verbose_name='Falta de venta')),
                ('estafa_contrato', models.IntegerField(choices=[(1, 'Si'), (2, 'No')], verbose_name='Estafa de contrato')),
                ('calidad_producto', models.IntegerField(choices=[(1, 'Si'), (2, 'No')], verbose_name='Mala calidad de producto')),
                ('encuesta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productores.Encuesta')),
            ],
            options={
                'verbose_name': '6 Razones de mercado',
                'verbose_name_plural': '6 Razones de mercado',
            },
        ),
        migrations.CreateModel(
            name='Reforestacion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seleccion', models.IntegerField(choices=[(1, 'Enriquecimiento de los bosques'), (2, 'Protecci\xf3n de fuentes de agua'), (3, 'Establecimiento de cercas viva'), (4, 'Establecimiento de viveros'), (5, 'Siembra de \xe1rboles en cacao'), (6, 'Plantaciones forestales'), (7, 'Siembra de \xe1rboles en potrero'), (8, 'Parcelas frutales')])),
                ('respuesta', models.IntegerField(choices=[(1, 'Si'), (2, 'No')])),
                ('encuesta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productores.Encuesta')),
            ],
            options={
                'verbose_name': '4 Reforestaci\xf3n',
                'verbose_name_plural': '4 Reforestaci\xf3n',
            },
        ),
        migrations.CreateModel(
            name='ServiciosOrganizado',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('encuesta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productores.Encuesta')),
            ],
            options={
                'verbose_name': '8 Org. productiva-comercial asociado',
                'verbose_name_plural': '8 Org. productiva-comercial asociado',
            },
        ),
        migrations.CreateModel(
            name='SituacionesPropiedad',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=200)),
            ],
            options={
                'verbose_name': 'Situaci\xf3n de la Propiedad',
                'verbose_name_plural': 'Situaciones de las Propiedades',
            },
        ),
        migrations.CreateModel(
            name='TenenciaPropiedad',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dueno_propiedad', models.IntegerField(choices=[(1, 'Si'), (2, 'No')], verbose_name='Son ustedes due\xf1os de la propiedad')),
                ('si', models.IntegerField(blank=True, choices=[(1, 'A nombre del Hombre'), (2, 'A nombre de la Mujer'), (3, 'A nombre de Hijas/hijos'), (4, 'A nombre del Hombre y Mujer'), (5, 'Colectivo')], null=True, verbose_name='En el caso Si, a nombre de quien esta la propiedad')),
                ('encuesta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productores.Encuesta')),
                ('no', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='productores.SituacionesPropiedad', verbose_name='En el caso que diga NO, especifique situaci\xf3n en que esta la propiedad')),
            ],
            options={
                'verbose_name': '2 Tenencia de Propiedad',
                'verbose_name_plural': '2 Tenencia de Propiedad',
            },
        ),
        migrations.CreateModel(
            name='Tipos_Servicio',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('servicio', models.CharField(max_length=200)),
            ],
            options={
                'verbose_name': 'Tipo de Servicio que recibe',
                'verbose_name_plural': 'Tipos de Servicios que recibe',
            },
        ),
        migrations.AddField(
            model_name='serviciosorganizado',
            name='tipos_servicio',
            field=models.ManyToManyField(to='productores.Tipos_Servicio', verbose_name='Tipos de servicios que recibe'),
        ),
        migrations.AddField(
            model_name='entrevistados',
            name='profesion',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productores.Profesiones', verbose_name='Profesi\xf3n u oficio'),
        ),
        migrations.AddField(
            model_name='encuesta',
            name='encuestador',
            field=smart_selects.db_fields.ChainedForeignKey(auto_choose=True, chained_field='organizacion', chained_model_field='organizacion', on_delete=django.db.models.deletion.CASCADE, to='productores.Encuestadores', verbose_name='Nombre del Encuestador'),
        ),
        migrations.AddField(
            model_name='encuesta',
            name='entrevistado',
            field=smart_selects.db_fields.ChainedForeignKey(auto_choose=True, chained_field='organizacion', chained_model_field='organizacion', on_delete=django.db.models.deletion.CASCADE, to='productores.Entrevistados', verbose_name='Nombre del jefe de familia'),
        ),
        migrations.AddField(
            model_name='encuesta',
            name='organizacion',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='organizacion.Organizacion', verbose_name='Nombre de la Organizaci\xf3n'),
        ),
        migrations.AddField(
            model_name='encuesta',
            name='usuario',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='educacion',
            name='encuesta',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productores.Encuesta'),
        ),
        migrations.AddField(
            model_name='detalleareafinca',
            name='encuesta',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productores.Encuesta'),
        ),
        migrations.AddField(
            model_name='caracterizacionterreno',
            name='encuesta',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productores.Encuesta'),
        ),
        migrations.AddField(
            model_name='beneficiosorganizado',
            name='encuesta',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productores.Encuesta'),
        ),
        migrations.AddField(
            model_name='areafinca',
            name='encuesta',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productores.Encuesta'),
        ),
    ]
