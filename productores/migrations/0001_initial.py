# -*- coding: utf-8 -*-
# Generated by Django 1.9.4 on 2016-05-27 14:55
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import multiselectfield.db.fields
import smart_selects.db_fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('lugar', '0003_auto_20150804_1931'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('organizacion', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ActividadesProduccion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=200)),
            ],
            options={
                'verbose_name': 'Actividad de Producci\xf3n',
                'verbose_name_plural': 'Actividades de Producci\xf3n',
            },
        ),
        migrations.CreateModel(
            name='AmpliarAreasCacao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('interes', models.IntegerField(choices=[(1, 'Si'), (2, 'No')], verbose_name='Tiene interes en ampliar las \xe1reas de cacao')),
                ('cuanto', models.FloatField(verbose_name='Cuantas manzanas')),
            ],
            options={
                'verbose_name': '15 Amplici\xf3n \xe1reas de cacao',
                'verbose_name_plural': '15 Amplici\xf3n \xe1reas de cacao',
            },
        ),
        migrations.CreateModel(
            name='AreaCacao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('area', models.FloatField(verbose_name='\xc1rea total de cacao establecida en finca(Mz)')),
            ],
            options={
                'verbose_name': '9 \xc1rea de cacao en finca',
                'verbose_name_plural': '9 \xc1rea de cacao en fincas',
            },
        ),
        migrations.CreateModel(
            name='AreaFinca',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('area', models.FloatField(verbose_name='\xc1rea total en manzanas que tiene la propiedad')),
            ],
            options={
                'verbose_name': '3 Uso de la Tierra',
                'verbose_name_plural': '3 Uso de la Tierra',
            },
        ),
        migrations.CreateModel(
            name='Beneficios',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('beneficio', models.CharField(max_length=200)),
            ],
            options={
                'verbose_name': 'Beneficio de estar asociado',
                'verbose_name_plural': 'Beneficios de estar asociado',
            },
        ),
        migrations.CreateModel(
            name='BeneficiosOrganizado',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('beneficios', models.ManyToManyField(to='productores.Beneficios', verbose_name='Beneficios de estar asociado')),
            ],
            options={
                'verbose_name': '8 Org. productiva-comercial asociado',
                'verbose_name_plural': '8 Org. productiva-comercial asociado',
            },
        ),
        migrations.CreateModel(
            name='CapacitacionesSocioeconomicas',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('capacitaciones_socio', models.IntegerField(choices=[(1, 'Formaci\xf3n y fortalecimiento organizacional'), (2, 'Contabilidad b\xe1sica y administraci\xf3n'), (3, 'Equidad de g\xe9nero'), (4, 'Manejo de cr\xe9ditos'), (5, 'Administraci\xf3n de peque\xf1os negocios'), (6, 'Gesti\xf3n empresarial'), (7, 'Cadena de valor de cacao'), (8, 'Transformaci\xf3n de cacao')], verbose_name='Capacitaciones')),
                ('opciones_socio', multiselectfield.db.fields.MultiSelectField(choices=[(1, 'Jefe familia var\xf3n'), (2, 'Jefa familia mujer'), (3, 'Hijos'), (4, 'Hijas')], max_length=7, verbose_name='Opciones')),
            ],
            options={
                'verbose_name': '13.2 Capacitaciones socioecon\xf3mico/org',
                'verbose_name_plural': '13.2 Capacitaciones socioecon\xf3mico/org',
            },
        ),
        migrations.CreateModel(
            name='CapacitacionesTecnicas',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('capacitaciones', models.IntegerField(choices=[(1, 'Regular en sombra'), (2, 'Poda'), (3, 'Manejo de plagas y enfermedades'), (4, 'Elaboraci\xf3n de abonos org\xe1nicos'), (5, 'Elaboraci\xf3n de productos para control de plagas'), (6, 'Establecimiento de vivero'), (7, 'Injertaci\xf3n de cacao'), (8, 'Selecci\xf3n de \xe1rboles \xe9lites para producci\xf3n de semillas'), (9, 'Manejo de post-cosecha (selecci\xf3n, cosecha, fermentado, secado)'), (10, 'Manejo de calidad de cacao'), (11, 'Certificaci\xf3n org\xe1nica')])),
                ('opciones', multiselectfield.db.fields.MultiSelectField(choices=[(1, 'Jefe familia var\xf3n'), (2, 'Jefa familia mujer'), (3, 'Hijos'), (4, 'Hijas')], max_length=7)),
            ],
            options={
                'verbose_name': '13.1 Capacitaci\xf3n familia',
                'verbose_name_plural': '13.1 Capacitaciones familia',
            },
        ),
        migrations.CreateModel(
            name='CaracterizacionTerreno',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('textura_suelo', models.IntegerField(choices=[(1, 'Arcilloso'), (2, 'Limoso'), (3, 'Arenoso'), (4, 'Franco')], verbose_name='\xbfCu\xe1l es el tipo de textura del suelo?')),
                ('pendiente_terreno', models.IntegerField(choices=[(1, 'Plana (0-10%)'), (2, 'Inclinada (11-30%)'), (3, 'Muy inclinada (> 30%)')], verbose_name='\xbfCu\xe1l es la pendiente del terreno?')),
                ('contenido_hojarasca', models.IntegerField(choices=[(1, 'Alta'), (2, 'Medio'), (3, 'Baja')], verbose_name='\xbfC\xf3mo en el contenido de hojarasca?')),
                ('porfundidad_suelo', models.IntegerField(choices=[(1, 'Poco profundo (< 50 cm)'), (2, 'Medio profundo (51-80 cm)'), (3, 'Muy profundo (> 80 cm)')], verbose_name='\xbfCu\xe1l es la profundidad de suelo?')),
                ('drenaje_suelo', models.IntegerField(choices=[(1, 'Bueno (no se encharca)'), (2, 'Regular (poco se encharca)'), (3, 'Malo (se encharca con lluvia)')], verbose_name='\xbfC\xf3mo en el drenaje del suelo?')),
            ],
            options={
                'verbose_name': '5 Caracterizaci\xf3n de terreno',
                'verbose_name_plural': '5 Caracterizaci\xf3n de terreno',
            },
        ),
        migrations.CreateModel(
            name='Certificacion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cacao_certificado', models.IntegerField(choices=[(1, 'Si'), (2, 'No')], verbose_name='Sus \xe1rea de cacao est\xe1n certificadas')),
                ('tipo', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[(1, 'Convencional'), (2, 'Org\xe1nico'), (3, 'UTZ/Sello'), (4, 'FAIR TRADE')], max_length=7, null=True, verbose_name='Tipo de certificaci\xf3n')),
                ('paga_certificacion', models.IntegerField(blank=True, choices=[(1, 'Productor'), (2, 'Cooperativa')], null=True, verbose_name='\xbfQui\xe9n paga la certificaci\xf3n?')),
                ('costo_certificacion', models.FloatField(blank=True, null=True, verbose_name='\xbfCu\xe1nto le cuesta estar certificado? (Lps)')),
            ],
            options={
                'verbose_name': '10.1 Tipo de certificaci\xf3n que posee',
                'verbose_name_plural': '10.1 Tipo de certificaci\xf3n que posee',
            },
        ),
        migrations.CreateModel(
            name='ComercializacionCacao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('producto', models.IntegerField(choices=[(1, 'Mazorca de cacao (unidad)'), (2, 'Semilla para siembra (unidad)'), (3, 'Cacao en baba (qq)'), (4, 'Cacao rojo sin fermentar (qq)'), (5, 'Cacao fermentado (qq)'), (6, 'Chocolate artesanal (lb)'), (7, 'Cacao en polvo (lb)'), (8, 'Cacao procesado (lb)'), (9, 'Cajeta de cacao (lb)'), (10, 'Pasta de cacao (lb)'), (11, 'Vino de cacao (lt)')])),
                ('auto_consumo', models.FloatField(blank=True, null=True, verbose_name='Auto-consumo')),
                ('venta', models.FloatField(blank=True, null=True)),
                ('precio_venta', models.FloatField(blank=True, null=True, verbose_name='Precio venta por unidad')),
                ('quien_vende', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[(1, 'Comunidad'), (2, 'Intermediario'), (3, 'Mercado'), (4, 'Cooperativa')], max_length=7, null=True, verbose_name='\xbfA qui\xe9n le vende?')),
                ('donde_vende', models.ManyToManyField(blank=True, to='lugar.Municipio', verbose_name='\xbfD\xf3nde lo vende? Municipios')),
            ],
            options={
                'verbose_name': '12 Comercializaci\xf3n de cacao',
                'verbose_name_plural': '12 Comercializaci\xf3n de cacao',
            },
        ),
        migrations.CreateModel(
            name='CostoProduccion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mantenimiento_cacao', models.FloatField(verbose_name='Mantenimiento de \xe1rea de cacao (Lps)')),
                ('mantenimiento_finca', models.FloatField(verbose_name='Mantenimiento de la finca (Lps)')),
            ],
            options={
                'verbose_name': '10.2 Costo de producci\xf3n',
                'verbose_name_plural': '10.2 Costo de producci\xf3n',
            },
        ),
        migrations.CreateModel(
            name='DestinoIngresos',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=200)),
            ],
            options={
                'verbose_name': 'Destino de ingresos percibidos',
                'verbose_name_plural': 'Destino de ingresos percibidos',
            },
        ),
        migrations.CreateModel(
            name='DetalleAreaFinca',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seleccion', models.IntegerField(choices=[(1, 'Bosque'), (2, 'Tacotal o regeneraci\xf3n natural'), (3, 'Cultivo anual ( que produce en el a\xf1o)'), (4, 'Plantaci\xf3n forestal ( madera y le\xf1a)'), (5, '\xc1rea de pastos abierto'), (6, '\xc1rea de pastos con \xe1rboles'), (7, 'Cultivo perenne (frutales)'), (8, 'Cultivo semi-perenne (mus\xe1cea, pi\xf1a)'), (9, 'Solo destinado para cacao'), (10, 'Huerto mixto con cacao'), (11, 'Otros')], verbose_name='3.2 Distribuci\xf3n de la finca')),
                ('area', models.FloatField(verbose_name='\xc1rea en Mz')),
            ],
            options={
                'verbose_name': '3 Uso de la Tierra',
                'verbose_name_plural': '3 Uso de la Tierra',
            },
        ),
        migrations.CreateModel(
            name='DistanciaComercioCacao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('distancia', models.FloatField(verbose_name='Distancia (km)')),
            ],
            options={
                'verbose_name': '12.1 Distancia recorrida',
                'verbose_name_plural': '12.1 Distancia recorrida',
            },
        ),
        migrations.CreateModel(
            name='Educacion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rango', models.IntegerField(choices=[(1, 'Hombres mayores 31 a\xf1os'), (2, 'Mujeres mayores 31 a\xf1os'), (3, 'Hombre joven 19 a 30 a\xf1os'), (4, 'Mujer joven 19 a 30 a\xf1os'), (5, 'Hombre adoles. 13 a 18 a\xf1os'), (6, 'Mujer adoles. 13 a 18 a\xf1os'), (7, 'Ni\xf1os 5 a 12 a\xf1os'), (8, 'Ni\xf1as 5 a 12 a\xf1os'), (9, 'Ancianos (> 64 a\xf1os)'), (10, 'Ancianas (> 64 a\xf1os)')], verbose_name='Selecci\xf3n')),
                ('numero_total', models.IntegerField(verbose_name='N\xfamero total')),
                ('no_lee_ni_escribe', models.IntegerField(verbose_name='No lee, ni escribe')),
                ('primaria_incompleta', models.IntegerField(verbose_name='Primaria incompleta')),
                ('primaria_completa', models.IntegerField(verbose_name='Primaria completa')),
                ('secundaria_incompleta', models.IntegerField(verbose_name='Secundaria incompleta')),
                ('bachiller', models.IntegerField(verbose_name='Bachiller')),
                ('universitario_tecnico', models.IntegerField(verbose_name='Universitario o t\xe9cnico')),
                ('viven_fuera', models.IntegerField(verbose_name='N\xfamero de personas que viven fuera de la finca')),
            ],
            options={
                'verbose_name': '1.2 Nivel de escolaridad de los miembros de la familia',
                'verbose_name_plural': '1.2 Nivel de escolaridad de los miembros de la familia',
            },
        ),
        migrations.CreateModel(
            name='Encuesta',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateField(verbose_name='Fecha de la encuesta')),
                ('year', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Encuestadores',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=200)),
                ('organizacion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='organizacion.Organizacion')),
            ],
            options={
                'verbose_name': 'Encuestador',
                'verbose_name_plural': 'Encuestadores',
            },
        ),
        migrations.CreateModel(
            name='Entrevistados',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=200, verbose_name='Nombre del jefe de familia')),
                ('cedula', models.CharField(max_length=20, verbose_name='N\xfamero de Cedula')),
                ('fecha_nacimiento', models.DateField(verbose_name='Fecha de nacimiento')),
                ('latitud', models.FloatField(blank=True, null=True)),
                ('longitud', models.FloatField(blank=True, null=True)),
                ('comunidad', smart_selects.db_fields.ChainedForeignKey(auto_choose=True, chained_field='municipio', chained_model_field='municipio', on_delete=django.db.models.deletion.CASCADE, to='lugar.Comunidad')),
                ('departamento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lugar.Departamento')),
                ('municipio', smart_selects.db_fields.ChainedForeignKey(auto_choose=True, chained_field='departamento', chained_model_field='departamento', on_delete=django.db.models.deletion.CASCADE, to='lugar.Municipio')),
                ('organizacion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='organizacion.Organizacion', verbose_name='A que Organizaci\xf3n pertenece')),
            ],
            options={
                'verbose_name': 'Informaci\xf3n del Entrevistado',
                'verbose_name_plural': 'Informaci\xf3n del Entrevistado',
            },
        ),
        migrations.CreateModel(
            name='Familia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('miembros', models.IntegerField(verbose_name='N\xfamero de miembros')),
                ('encuesta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productores.Encuesta')),
            ],
            options={
                'verbose_name': '1.1 Miembros de la Familia',
                'verbose_name_plural': '1.1 Miembros de la Familia',
            },
        ),
        migrations.CreateModel(
            name='FenomenosNaturales',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sequia', models.IntegerField(choices=[(1, 'Fuerte'), (2, 'Poco fuerte'), (3, 'Leve'), (4, 'No hubo')], verbose_name='Sequ\xeda')),
                ('innundacion', models.IntegerField(choices=[(1, 'Fuerte'), (2, 'Poco fuerte'), (3, 'Leve'), (4, 'No hubo')], verbose_name='Inundaci\xf3n')),
                ('lluvia', models.IntegerField(choices=[(1, 'Fuerte'), (2, 'Poco fuerte'), (3, 'Leve'), (4, 'No hubo')])),
                ('viento', models.IntegerField(choices=[(1, 'Fuerte'), (2, 'Poco fuerte'), (3, 'Leve'), (4, 'No hubo')])),
                ('deslizamiento', models.IntegerField(choices=[(1, 'Fuerte'), (2, 'Poco fuerte'), (3, 'Leve'), (4, 'No hubo')])),
                ('encuesta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productores.Encuesta')),
            ],
            options={
                'verbose_name': '6 Fen\xf3menos naturales',
                'verbose_name_plural': '6 Fen\xf3menos naturales',
            },
        ),
        migrations.CreateModel(
            name='Genero',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ingresos', models.IntegerField(choices=[(1, 'Si'), (2, 'No')], verbose_name='\xbfRecibe ingresos por las actividades que realiza?')),
                ('ingreso_mesual_cacao', models.FloatField(blank=True, null=True, verbose_name='Ingreso mensual aproximado percibido (solo por cacao)')),
                ('ingreso_mesual', models.FloatField(blank=True, null=True, verbose_name='Ingreso mensual aproximado percibido (incluyendo todas las actividades)')),
                ('decisiones', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[(1, 'Decide Usted sobre la siembra de cacao'), (2, 'Decide Usted sobre la cosecha de cacao'), (3, 'Decide Usted sobre la venta de cacao'), (4, 'Decide Usted sobre la Ingresos de cacao')], max_length=7, null=True, verbose_name='Decisiones sobre destino de la producci\xf3n')),
                ('actividades', models.ManyToManyField(blank=True, to='productores.ActividadesProduccion', verbose_name='Actividades en las que participa')),
                ('destino_ingresos', models.ManyToManyField(blank=True, to='productores.DestinoIngresos', verbose_name='Destino de los ingresos percibidos')),
                ('encuesta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productores.Encuesta')),
            ],
            options={
                'verbose_name': '14 G\xe9nero',
                'verbose_name_plural': '14 G\xe9nero',
            },
        ),
        migrations.CreateModel(
            name='Inversion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invierte_cacao', models.IntegerField(choices=[(1, 'Si'), (2, 'No')], verbose_name='Invierte en cacao')),
                ('interes_invertrir', models.IntegerField(choices=[(1, 'Si'), (2, 'No')], verbose_name='Inter\xe9s de invertir')),
                ('falta_credito', models.IntegerField(choices=[(1, 'Si'), (2, 'No')], verbose_name='Falta de cr\xe9dito')),
                ('altos_intereses', models.IntegerField(choices=[(1, 'Si'), (2, 'No')])),
                ('robo_producto', models.IntegerField(choices=[(1, 'Si'), (2, 'No')], verbose_name='Robo de producto')),
                ('encuesta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productores.Encuesta')),
            ],
            options={
                'verbose_name': '6 Inversi\xf3n',
                'verbose_name_plural': '6 Inversi\xf3n',
            },
        ),
        migrations.CreateModel(
            name='MitigacionRiesgos',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('monitoreo_plagas', models.IntegerField(choices=[(1, 'Si'), (2, 'No')], verbose_name='\xbfRealiza monitoreo de plagas y enfermedades?')),
                ('manejo_cultivo', models.IntegerField(choices=[(1, 'Si'), (2, 'No')], verbose_name='\xbfCuenta con un manejo adecuado para el cultivo?')),
                ('manejo_recursos', models.IntegerField(choices=[(1, 'Si'), (2, 'No')], verbose_name='\xbfDisponen suficiente recursos para manejo de finca?')),
                ('almacenamiento_agua', models.IntegerField(choices=[(1, 'Si'), (2, 'No')], verbose_name='\xbfCuenta con obras para almacenamiento de agua?')),
                ('distribucion_cacao', models.IntegerField(choices=[(1, 'Si'), (2, 'No')], verbose_name='\xbfParticipan en cadena de distribuci\xf3n de producto cacao?')),
                ('venta_cacao', models.IntegerField(choices=[(1, 'Si'), (2, 'No')], verbose_name='\xbfCuenta con un contrato para la venta de cacao?')),
                ('si_venta_cacao', models.IntegerField(choices=[(1, 'Individual'), (2, 'A trav\xe9s de la Cooperativa')], verbose_name='Si responde Si: favor indicar si el contrato lo hace')),
                ('tecnologia_secado', models.IntegerField(choices=[(1, 'Si'), (2, 'No')], verbose_name='\xbfDispone de tecnolog\xeda para el secado y almacenamiento de cosecha?')),
                ('si_tecnologia_secado', models.IntegerField(choices=[(1, 'Propia'), (2, 'Cooperativa')], verbose_name='Si responde Si: favor indicar si la tecnolog\xeda de secado y almacenamiento es')),
                ('encuesta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productores.Encuesta')),
            ],
            options={
                'verbose_name': '7 Mitigaci\xf3n de los riesgos',
                'verbose_name_plural': '7 Mitigaci\xf3n de los riesgos',
            },
        ),
        migrations.CreateModel(
            name='OrganizacionAsociada',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('socio', models.IntegerField(choices=[(1, 'Si'), (2, 'No')], verbose_name='Trabaja con alguna Organizaci\xf3n/Instituci\xf3n')),
                ('encuesta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productores.Encuesta')),
                ('organizacion', models.ManyToManyField(blank=True, to='organizacion.Organizacion', verbose_name='Organizaci\xf3n/Instituci\xf3n con la que trabaja')),
            ],
            options={
                'verbose_name': '8 Org. productiva-comercial asociado',
                'verbose_name_plural': '8 Org. productiva-comercial asociado',
            },
        ),
        migrations.CreateModel(
            name='OtrosIngresos',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=200)),
            ],
            options={
                'verbose_name': 'Otra fuente de ingreso en la finca',
                'verbose_name_plural': 'Otras fuentes de ingreso en la finca',
            },
        ),
        migrations.CreateModel(
            name='Plantacion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('edad', models.IntegerField(choices=[(1, 'Menor de un a\xf1o'), (2, 'De 1 a 3 a\xf1os'), (3, 'De 4 a 10 a\xf1os'), (4, 'De 10 a 20 a\xf1os'), (5, 'Mayores de 20 a\xf1os')])),
                ('area', models.FloatField(verbose_name='\xc1rea en Mz')),
                ('edad_real', models.FloatField(verbose_name='Edad real de la Plantaci\xf3n (a\xf1os)')),
                ('numero_plantas', models.IntegerField(verbose_name='N\xfamero de plantas en el \xe1rea')),
                ('plantas_semilla', models.IntegerField(verbose_name='N\xfamero de plantas establecidas por semilla')),
                ('plantas_injerto', models.IntegerField(verbose_name='N\xfamero de plantas establecidas por injerto')),
                ('plantas_improductivas', models.IntegerField(verbose_name='N\xfamero de plantas improductivas en el \xe1rea')),
                ('encuesta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productores.Encuesta')),
            ],
            options={
                'verbose_name': '9.1 Edad de la plantaci\xf3n',
                'verbose_name_plural': '9.1 Edad de la plantaci\xf3n',
            },
        ),
        migrations.CreateModel(
            name='ProblemasArea1',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=200)),
            ],
            options={
                'verbose_name': 'Problemas en \xe1reas de 1 a 3 a\xf1os',
                'verbose_name_plural': 'Problemas en \xe1reas de 1 a 3 a\xf1os',
            },
        ),
        migrations.CreateModel(
            name='ProblemasArea2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=200)),
            ],
            options={
                'verbose_name': 'Problemas en \xe1reas de 4 a 10 a\xf1os',
                'verbose_name_plural': 'Problemas en \xe1reas de 4 a 10 a\xf1os',
            },
        ),
        migrations.CreateModel(
            name='ProblemasArea3',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=200)),
            ],
            options={
                'verbose_name': 'Problemas en \xe1reas de 10 a 20 a\xf1os',
                'verbose_name_plural': 'Problemas en \xe1reas de 10 a 20 a\xf1os',
            },
        ),
        migrations.CreateModel(
            name='ProblemasAreaCacao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('area_1', models.ManyToManyField(to='productores.ProblemasArea1', verbose_name='En \xe1reas de 1 a 3 a\xf1os')),
                ('area_2', models.ManyToManyField(to='productores.ProblemasArea2', verbose_name='En \xe1reas de 4 a 10 a\xf1os')),
                ('area_3', models.ManyToManyField(to='productores.ProblemasArea3', verbose_name='En \xe1reas de 10 a 20 a\xf1os')),
                ('encuesta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productores.Encuesta')),
            ],
            options={
                'verbose_name': '13.3 Principales problemas \xe1reas de cacao',
                'verbose_name_plural': '13.3 Principales problemas \xe1reas de cacao',
            },
        ),
        migrations.CreateModel(
            name='ProduccionCacao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cacao_baba', models.FloatField(verbose_name='Producci\xf3n cacao en baba (qq baba/fresco)')),
                ('meses', multiselectfield.db.fields.MultiSelectField(choices=[(1, 'Enero'), (2, 'Febrero'), (3, 'Marzo'), (4, 'Abril'), (5, 'Mayo'), (6, 'Junio'), (7, 'Julio'), (8, 'Agosto'), (9, 'Septiembre'), (10, 'Octubre'), (11, 'Noviembre'), (12, 'Diciembre')], max_length=26, verbose_name='Meses de mayor producci\xf3n de cacao')),
                ('encuesta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productores.Encuesta')),
            ],
            options={
                'verbose_name': '9.2 Producci\xf3n de cacao \xfaltimo a\xf1o',
                'verbose_name_plural': '9.2 Producci\xf3n de cacao \xfaltimo a\xf1o',
            },
        ),
        migrations.CreateModel(
            name='Profesiones',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=200)),
            ],
            options={
                'verbose_name': 'Profesi\xf3n',
                'verbose_name_plural': 'Profesiones',
            },
        ),
        migrations.CreateModel(
            name='QuienCertifica',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=200)),
            ],
            options={
                'verbose_name': 'Qui\xe9n certifica',
                'verbose_name_plural': 'Quienes certifican',
            },
        ),
        migrations.CreateModel(
            name='RazonesAgricolas',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plantas_improductivas', models.IntegerField(choices=[(1, 'Alto (40%)'), (2, 'Medio (30%)'), (3, 'Baja (10%)')])),
                ('plagas_enfermedades', models.IntegerField(choices=[(1, 'Si'), (2, 'No')], verbose_name='Plagas y enfermedades')),
                ('quemas', models.IntegerField(choices=[(1, 'Si'), (2, 'No')])),
                ('encuesta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productores.Encuesta')),
            ],
            options={
                'verbose_name': '6 Razones agr\xedcolas',
                'verbose_name_plural': '6 Razones agr\xedcolas',
            },
        ),
        migrations.CreateModel(
            name='RazonesMercado',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bajo_precio', models.IntegerField(choices=[(1, 'Si'), (2, 'No')])),
                ('falta_venta', models.IntegerField(choices=[(1, 'Si'), (2, 'No')], verbose_name='Falta de venta')),
                ('estafa_contrato', models.IntegerField(choices=[(1, 'Si'), (2, 'No')], verbose_name='Estafa de contrato')),
                ('calidad_producto', models.IntegerField(choices=[(1, 'Si'), (2, 'No')], verbose_name='Mala calidad de producto')),
                ('encuesta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productores.Encuesta')),
            ],
            options={
                'verbose_name': '6 Razones de mercado',
                'verbose_name_plural': '6 Razones de mercado',
            },
        ),
        migrations.CreateModel(
            name='Reforestacion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seleccion', models.IntegerField(choices=[(1, 'Enriquecimiento de los bosques'), (2, 'Protecci\xf3n de fuentes de agua'), (3, 'Establecimiento de cercas viva'), (4, 'Establecimiento de viveros'), (5, 'Siembra de \xe1rboles en cacao'), (6, 'Plantaciones forestales'), (7, 'Siembra de \xe1rboles en potrero'), (8, 'Parcelas frutales')])),
                ('respuesta', models.IntegerField(choices=[(1, 'Si'), (2, 'No')])),
                ('encuesta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productores.Encuesta')),
            ],
            options={
                'verbose_name': '4 Reforestaci\xf3n',
                'verbose_name_plural': '4 Reforestaci\xf3n',
            },
        ),
        migrations.CreateModel(
            name='ServiciosOrganizado',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('encuesta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productores.Encuesta')),
            ],
            options={
                'verbose_name': '8 Org. productiva-comercial asociado',
                'verbose_name_plural': '8 Org. productiva-comercial asociado',
            },
        ),
        migrations.CreateModel(
            name='SituacionesPropiedad',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=200)),
            ],
            options={
                'verbose_name': 'Situaci\xf3n de la Propiedad',
                'verbose_name_plural': 'Situaciones de las Propiedades',
            },
        ),
        migrations.CreateModel(
            name='TecnicasAplicadas',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('viveros', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[(1, 'Preparaci\xf3n del sitio'), (2, 'Preparaci\xf3n del sustrato'), (3, 'Llenado de bolsa'), (4, 'Selecci\xf3n de semilla'), (5, 'Siembra por semilla'), (6, 'Uso de riego'), (7, 'Control de malas hierba'), (8, 'Fertilizaci\xf3n org\xe1nica'), (9, 'Injertaci\xf3n')], max_length=17, null=True, verbose_name='11.1 Viveros')),
                ('fertilizacion', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[(1, 'Aplicaci\xf3n de t\xe9 de esti\xe9rcol'), (2, 'Aplicaci\xf3n de gallinaza'), (3, 'Aplicaci\xf3n de Bocashi'), (4, 'Aplicaci\xf3n de foliares naturales'), (5, 'Uso de triple cal'), (6, 'Aplicaci\xf3n de lombrihumus'), (7, 'Aplicaci\xf3n de urea'), (8, 'Aplicaci\xf3n de fertilizante completo')], max_length=15, null=True, verbose_name='11.2 Pr\xe1cticas de fertilizaci\xf3n')),
                ('pract_manejo_fis', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[(1, 'Control de malas hierbas con machete'), (2, 'Aplica herbicidas para controlar las malas hierbas'), (3, 'Manejo de plagas con productos naturales'), (4, 'Manejo de enfermedades con productos naturales'), (5, 'Manejo de enfermedades con productos quimicos'), (6, 'Recolecci\xf3n e eliminaci\xf3n de frutos enfermos')], max_length=11, null=True, verbose_name='11.3 Pr\xe1cticas de manejo fitosanitario')),
                ('pract_manejo_prod', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[(1, 'Poda de formaci\xf3n'), (2, 'Poda de mantenimiento'), (3, 'Poda de rehabilitaci\xf3n o renovaci\xf3n'), (4, 'Regulaci\xf3n en sombra')], max_length=7, null=True, verbose_name='11.4 Pr\xe1cticas de manejo productivo')),
                ('pract_mejora_plat', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[(1, 'Selecci\xf3n de \xe1rboles superiores'), (2, 'Injertaci\xf3n en \xe1rboles adultos'), (3, 'Renovaci\xf3n de \xe1rea con plantas injertadas'), (4, 'Enriquecimiento de \xe1reas con plantas injertadas')], max_length=7, null=True, verbose_name='11.5 Pr\xe1cticas de mejoramiento de la plantaci\xf3n')),
                ('pract_manejo_post_c', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[(1, 'Selecci\xf3n y clasificaci\xf3n de mazorcas por variedad'), (2, 'Selecci\xf3n de cacao en baba a fermentar'), (3, 'Fermentaci\xf3n en sacos'), (4, 'Fermentaci\xf3n en cajones'), (5, 'Fermentaci\xf3n en cajillas'), (6, 'Lo vende en baba a un centro de acopio'), (7, 'Solo la saca de la mazorca y lo seca'), (8, 'Lo saca de la mazorca, lo lava y luego lo seca')], max_length=15, null=True, verbose_name='11.6 Pr\xe1cticas de manejo postcosecha y beneficiado')),
                ('acopio_cacao', models.IntegerField(choices=[(1, 'Si'), (2, 'No')], verbose_name='11.7 Acopio de cacao en la comunidad/municipio')),
                ('acopio_org', models.IntegerField(choices=[(1, 'Si'), (2, 'No')], verbose_name='11.8 Asociaci\xf3n con Org. que acopia cacao')),
                ('encuesta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productores.Encuesta')),
            ],
            options={
                'verbose_name': '11 T\xe9cn. aplicadas \xe1rea de cacao',
                'verbose_name_plural': '11 T\xe9cn. aplicadas \xe1rea de cacao',
            },
        ),
        migrations.CreateModel(
            name='TenenciaPropiedad',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dueno_propiedad', models.IntegerField(choices=[(1, 'Si'), (2, 'No')], verbose_name='Son ustedes due\xf1os de la propiedad')),
                ('si', models.IntegerField(blank=True, choices=[(1, 'A nombre del Hombre'), (2, 'A nombre de la Mujer'), (3, 'A nombre de Hijas/hijos'), (4, 'A nombre del Hombre y Mujer'), (5, 'Colectivo')], null=True, verbose_name='En el caso Si, a nombre de quien esta la propiedad')),
                ('encuesta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productores.Encuesta')),
                ('no', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='productores.SituacionesPropiedad', verbose_name='En el caso que diga NO, especifique situaci\xf3n en que esta la propiedad')),
            ],
            options={
                'verbose_name': '2 Tenencia de Propiedad',
                'verbose_name_plural': '2 Tenencia de Propiedad',
            },
        ),
        migrations.CreateModel(
            name='TiposServicio',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('servicio', models.CharField(max_length=200)),
            ],
            options={
                'verbose_name': 'Tipo de Servicio que recibe',
                'verbose_name_plural': 'Tipos de Servicios que recibe',
            },
        ),
        migrations.AddField(
            model_name='serviciosorganizado',
            name='tipos_servicio',
            field=models.ManyToManyField(to='productores.TiposServicio', verbose_name='Tipos de servicios que recibe'),
        ),
        migrations.AddField(
            model_name='genero',
            name='otros_ingresos',
            field=models.ManyToManyField(to='productores.OtrosIngresos', verbose_name='Sobre otros Ingresos'),
        ),
        migrations.AddField(
            model_name='entrevistados',
            name='profesion',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productores.Profesiones', verbose_name='Profesi\xf3n u oficio'),
        ),
        migrations.AddField(
            model_name='encuesta',
            name='encuestador',
            field=smart_selects.db_fields.ChainedForeignKey(auto_choose=True, chained_field='organizacion', chained_model_field='organizacion', on_delete=django.db.models.deletion.CASCADE, to='productores.Encuestadores', verbose_name='Nombre del Encuestador'),
        ),
        migrations.AddField(
            model_name='encuesta',
            name='entrevistado',
            field=smart_selects.db_fields.ChainedForeignKey(auto_choose=True, chained_field='organizacion', chained_model_field='organizacion', on_delete=django.db.models.deletion.CASCADE, to='productores.Entrevistados', verbose_name='Nombre del jefe de familia'),
        ),
        migrations.AddField(
            model_name='encuesta',
            name='organizacion',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='organizacion.Organizacion', verbose_name='Nombre de la Organizaci\xf3n'),
        ),
        migrations.AddField(
            model_name='encuesta',
            name='usuario',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='educacion',
            name='encuesta',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productores.Encuesta'),
        ),
        migrations.AddField(
            model_name='distanciacomerciocacao',
            name='encuesta',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productores.Encuesta'),
        ),
        migrations.AddField(
            model_name='detalleareafinca',
            name='encuesta',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productores.Encuesta'),
        ),
        migrations.AddField(
            model_name='costoproduccion',
            name='encuesta',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productores.Encuesta'),
        ),
        migrations.AddField(
            model_name='comercializacioncacao',
            name='encuesta',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productores.Encuesta'),
        ),
        migrations.AddField(
            model_name='certificacion',
            name='encuesta',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productores.Encuesta'),
        ),
        migrations.AddField(
            model_name='certificacion',
            name='quien_certifica',
            field=models.ManyToManyField(blank=True, to='productores.QuienCertifica', verbose_name='\xbfQui\xe9n certifica?'),
        ),
        migrations.AddField(
            model_name='caracterizacionterreno',
            name='encuesta',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productores.Encuesta'),
        ),
        migrations.AddField(
            model_name='capacitacionestecnicas',
            name='encuesta',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productores.Encuesta'),
        ),
        migrations.AddField(
            model_name='capacitacionessocioeconomicas',
            name='encuesta',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productores.Encuesta'),
        ),
        migrations.AddField(
            model_name='beneficiosorganizado',
            name='encuesta',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productores.Encuesta'),
        ),
        migrations.AddField(
            model_name='areafinca',
            name='encuesta',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productores.Encuesta'),
        ),
        migrations.AddField(
            model_name='areacacao',
            name='encuesta',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productores.Encuesta'),
        ),
        migrations.AddField(
            model_name='ampliarareascacao',
            name='encuesta',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='productores.Encuesta'),
        ),
    ]
